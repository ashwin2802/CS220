$date
	Thu Feb 18 22:39:47 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder_top $end
$var wire 8 ! sum [7:0] $end
$var wire 1 " over $end
$var wire 1 # c_out $end
$var reg 8 $ A [7:0] $end
$var reg 8 % B [7:0] $end
$var reg 1 & opcode $end
$scope module UUT $end
$var wire 8 ' A [7:0] $end
$var wire 8 ( B [7:0] $end
$var wire 1 & opcode $end
$var wire 1 " over $end
$var wire 8 ) sum [7:0] $end
$var wire 1 # c_out $end
$var wire 7 * c_mid [6:0] $end
$scope module ADDER0 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - b_t $end
$var wire 1 & c_in $end
$var wire 1 . c_out $end
$var wire 1 & opcode $end
$var wire 1 / sum $end
$upscope $end
$scope module ADDER1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 b_t $end
$var wire 1 3 c_in $end
$var wire 1 4 c_out $end
$var wire 1 & opcode $end
$var wire 1 5 sum $end
$upscope $end
$scope module ADDER2 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 8 b_t $end
$var wire 1 9 c_in $end
$var wire 1 : c_out $end
$var wire 1 & opcode $end
$var wire 1 ; sum $end
$upscope $end
$scope module ADDER3 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > b_t $end
$var wire 1 ? c_in $end
$var wire 1 @ c_out $end
$var wire 1 & opcode $end
$var wire 1 A sum $end
$upscope $end
$scope module ADDER4 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D b_t $end
$var wire 1 E c_in $end
$var wire 1 F c_out $end
$var wire 1 & opcode $end
$var wire 1 G sum $end
$upscope $end
$scope module ADDER5 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 J b_t $end
$var wire 1 K c_in $end
$var wire 1 L c_out $end
$var wire 1 & opcode $end
$var wire 1 M sum $end
$upscope $end
$scope module ADDER6 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 P b_t $end
$var wire 1 Q c_in $end
$var wire 1 R c_out $end
$var wire 1 & opcode $end
$var wire 1 S sum $end
$upscope $end
$scope module ADDER7 $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 V b_t $end
$var wire 1 W c_in $end
$var wire 1 # c_out $end
$var wire 1 & opcode $end
$var wire 1 X sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0X
0W
0V
0U
0T
1S
0R
0Q
1P
1O
0N
1M
0L
0K
1J
1I
0H
1G
0F
0E
1D
1C
0B
1A
0@
0?
1>
1=
0<
1;
0:
09
18
17
06
15
04
03
12
11
00
1/
0.
1-
1,
0+
b0 *
b1111111 )
b1111111 (
b0 '
0&
b1111111 %
b0 $
0#
0"
b1111111 !
$end
#1
1X
1"
1W
1R
0S
1K
1Q
1F
b1110000 *
1L
0G
b10101111 !
b10101111 )
1M
1B
1H
b110000 $
b110000 '
#2
1M
1E
1K
1@
b1111000 *
1F
0"
0A
0G
b100111 !
b100111 )
0X
1#
1<
0B
1T
b10101000 $
b10101000 '
#3
0Q
0?
0L
0:
0K
1;
0F
09
04
1G
1X
15
0E
0W
03
0@
0R
0"
b0 *
0.
1A
1M
0S
0#
0-
b10111111 !
b10111111 )
1/
02
0>
0J
0P
1V
07
0C
10
0T
1&
b1101011 %
b1101011 (
b101010 $
b101010 '
#4
0?
0K
0:
b0 *
0F
05
1;
0A
1G
0M
b11010101 !
b11010101 )
1S
08
0D
17
1C
00
16
0<
1B
0H
1N
b1111111 %
b1111111 (
b1010100 $
b1010100 '
#5
0;
1A
0G
1M
b10101001 !
b10101001 )
0S
06
1<
0B
1H
0N
b101000 $
b101000 '
#6
0A
b10000001 !
b10000001 )
0M
0<
0H
b0 $
b0 '
#7
1M
1K
1F
1E
b11000 *
1@
0G
15
b10100011 !
b10100011 )
0A
1>
1D
0=
0C
10
1<
b1100111 %
b1100111 (
b1010 $
b1010 '
#8
0K
0F
1G
0E
0S
0X
0@
0Q
05
1;
0A
b110101 !
b110101 )
1M
b0 *
0L
0>
0V
1=
1U
00
16
0<
1H
b11101111 %
b11101111 (
b100100 $
b100100 '
#9
1S
1Q
1L
0M
1X
1"
1K
1W
1F
b1110000 *
1R
15
1A
0G
1-
b11001111 !
b11001111 )
1/
12
18
1>
1J
1P
1C
0U
06
1B
0H
1N
0&
b1111111 %
b1111111 (
b1010000 $
b1010000 '
#10
