$date
	Thu Feb 18 21:50:17 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module worm_top $end
$var wire 5 ! out2 [4:0] $end
$var wire 5 " out1 [4:0] $end
$var reg 1 # clk $end
$var reg 4 $ in [3:0] $end
$var reg 1 % in_valid $end
$scope module a $end
$var wire 1 & c_out $end
$var wire 1 # clk $end
$var wire 4 ' in [3:0] $end
$var wire 1 % in_valid $end
$var wire 5 ( out1 [4:0] $end
$var wire 5 ) out2 [4:0] $end
$var wire 1 * overflow $end
$var wire 5 + buff [4:0] $end
$var reg 5 , A [4:0] $end
$var reg 5 - B [4:0] $end
$var reg 1 . opcode $end
$scope module ADDER $end
$var wire 5 / A [4:0] $end
$var wire 5 0 B [4:0] $end
$var wire 1 & c_out $end
$var wire 1 . opcode $end
$var wire 1 * over $end
$var wire 5 1 sum [4:0] $end
$var wire 5 2 c_mid [4:0] $end
$scope module ADDER0 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 b_t $end
$var wire 1 . c_in $end
$var wire 1 6 c_out $end
$var wire 1 . opcode $end
$var wire 1 7 sum $end
$upscope $end
$scope module ADDER1 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : b_t $end
$var wire 1 ; c_in $end
$var wire 1 < c_out $end
$var wire 1 . opcode $end
$var wire 1 = sum $end
$upscope $end
$scope module ADDER2 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 @ b_t $end
$var wire 1 A c_in $end
$var wire 1 B c_out $end
$var wire 1 . opcode $end
$var wire 1 C sum $end
$upscope $end
$scope module ADDER3 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 F b_t $end
$var wire 1 G c_in $end
$var wire 1 H c_out $end
$var wire 1 . opcode $end
$var wire 1 I sum $end
$upscope $end
$scope module ADDER4 $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 L b_t $end
$var wire 1 M c_in $end
$var wire 1 N c_out $end
$var wire 1 . opcode $end
$var wire 1 O sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
1=
0<
0;
1:
19
08
07
06
05
04
03
b0 2
b10 1
b10 0
b0 /
0.
b10 -
b0 ,
b10 +
x*
b0 )
b0 (
b10 '
z&
1%
b10 $
1#
b0 "
b0 !
$end
#5
b10 "
b10 (
0#
#10
1C
1A
17
b10 2
1<
b101 +
b101 1
0=
15
14
18
b11 -
b11 0
b10 ,
b10 /
1#
b11 $
b11 '
#15
b101 "
b101 (
0#
#20
0C
0A
b0 2
0<
b11 +
b11 1
1=
08
b0 ,
b0 /
1#
b111 $
b111 '
#25
b11 !
b11 )
0#
#30
1N
1M
1H
1G
1B
1;
1=
0I
0O
b11101 2
16
05
b10 +
b10 1
07
0:
1@
1F
1L
13
1>
1.
b101 ,
b101 /
1#
b1011 $
b1011 '
#35
b10 "
b10 (
0#
#40
1N
0O
1M
1H
0I
1G
1A
1B
0=
b11111 2
1<
b0 +
b0 1
0C
18
0>
b11 ,
b11 /
1#
b1111 $
b1111 '
#45
b0 !
b0 )
0#
#50
0G
0M
0B
0H
0N
0;
0=
1C
0I
0O
b10 2
06
15
b101 +
b101 1
17
1:
0@
0F
0L
03
0.
b10 ,
b10 /
1#
b11 $
b11 '
#55
b101 "
b101 (
0#
#60
0N
0M
0H
0=
0G
0A
0;
0B
0<
b0 2
06
1C
1I
1O
05
b11101 +
b11101 1
17
0:
1@
1F
1L
08
1.
b0 ,
b0 /
1#
b1111 $
b1111 '
#65
0#
#70
1#
#75
0#
#80
1#
